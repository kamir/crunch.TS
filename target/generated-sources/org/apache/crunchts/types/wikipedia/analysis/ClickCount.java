/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.apache.crunchts.types.wikipedia.analysis;  
@SuppressWarnings("all")
/** Avro-Record based on the description on http://dumps.wikimedia.org/other/pagecounts-raw/ */
@org.apache.avro.specific.AvroGenerated
public class ClickCount extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ClickCount\",\"namespace\":\"org.apache.crunchts.types.wikipedia.analysis\",\"doc\":\"Avro-Record based on the description on http://dumps.wikimedia.org/other/pagecounts-raw/\",\"fields\":[{\"name\":\"year\",\"type\":\"int\"},{\"name\":\"month\",\"type\":\"int\"},{\"name\":\"day\",\"type\":\"int\"},{\"name\":\"hour\",\"type\":\"string\"},{\"name\":\"projectname\",\"type\":\"string\"},{\"name\":\"pagename\",\"type\":\"string\"},{\"name\":\"clicks\",\"type\":\"long\"},{\"name\":\"volume\",\"type\":\"long\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int year;
  @Deprecated public int month;
  @Deprecated public int day;
  @Deprecated public java.lang.CharSequence hour;
  @Deprecated public java.lang.CharSequence projectname;
  @Deprecated public java.lang.CharSequence pagename;
  @Deprecated public long clicks;
  @Deprecated public long volume;

  /**
   * Default constructor.
   */
  public ClickCount() {}

  /**
   * All-args constructor.
   */
  public ClickCount(java.lang.Integer year, java.lang.Integer month, java.lang.Integer day, java.lang.CharSequence hour, java.lang.CharSequence projectname, java.lang.CharSequence pagename, java.lang.Long clicks, java.lang.Long volume) {
    this.year = year;
    this.month = month;
    this.day = day;
    this.hour = hour;
    this.projectname = projectname;
    this.pagename = pagename;
    this.clicks = clicks;
    this.volume = volume;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return year;
    case 1: return month;
    case 2: return day;
    case 3: return hour;
    case 4: return projectname;
    case 5: return pagename;
    case 6: return clicks;
    case 7: return volume;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: year = (java.lang.Integer)value$; break;
    case 1: month = (java.lang.Integer)value$; break;
    case 2: day = (java.lang.Integer)value$; break;
    case 3: hour = (java.lang.CharSequence)value$; break;
    case 4: projectname = (java.lang.CharSequence)value$; break;
    case 5: pagename = (java.lang.CharSequence)value$; break;
    case 6: clicks = (java.lang.Long)value$; break;
    case 7: volume = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'year' field.
   */
  public java.lang.Integer getYear() {
    return year;
  }

  /**
   * Sets the value of the 'year' field.
   * @param value the value to set.
   */
  public void setYear(java.lang.Integer value) {
    this.year = value;
  }

  /**
   * Gets the value of the 'month' field.
   */
  public java.lang.Integer getMonth() {
    return month;
  }

  /**
   * Sets the value of the 'month' field.
   * @param value the value to set.
   */
  public void setMonth(java.lang.Integer value) {
    this.month = value;
  }

  /**
   * Gets the value of the 'day' field.
   */
  public java.lang.Integer getDay() {
    return day;
  }

  /**
   * Sets the value of the 'day' field.
   * @param value the value to set.
   */
  public void setDay(java.lang.Integer value) {
    this.day = value;
  }

  /**
   * Gets the value of the 'hour' field.
   */
  public java.lang.CharSequence getHour() {
    return hour;
  }

  /**
   * Sets the value of the 'hour' field.
   * @param value the value to set.
   */
  public void setHour(java.lang.CharSequence value) {
    this.hour = value;
  }

  /**
   * Gets the value of the 'projectname' field.
   */
  public java.lang.CharSequence getProjectname() {
    return projectname;
  }

  /**
   * Sets the value of the 'projectname' field.
   * @param value the value to set.
   */
  public void setProjectname(java.lang.CharSequence value) {
    this.projectname = value;
  }

  /**
   * Gets the value of the 'pagename' field.
   */
  public java.lang.CharSequence getPagename() {
    return pagename;
  }

  /**
   * Sets the value of the 'pagename' field.
   * @param value the value to set.
   */
  public void setPagename(java.lang.CharSequence value) {
    this.pagename = value;
  }

  /**
   * Gets the value of the 'clicks' field.
   */
  public java.lang.Long getClicks() {
    return clicks;
  }

  /**
   * Sets the value of the 'clicks' field.
   * @param value the value to set.
   */
  public void setClicks(java.lang.Long value) {
    this.clicks = value;
  }

  /**
   * Gets the value of the 'volume' field.
   */
  public java.lang.Long getVolume() {
    return volume;
  }

  /**
   * Sets the value of the 'volume' field.
   * @param value the value to set.
   */
  public void setVolume(java.lang.Long value) {
    this.volume = value;
  }

  /** Creates a new ClickCount RecordBuilder */
  public static org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder newBuilder() {
    return new org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder();
  }
  
  /** Creates a new ClickCount RecordBuilder by copying an existing Builder */
  public static org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder newBuilder(org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder other) {
    return new org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder(other);
  }
  
  /** Creates a new ClickCount RecordBuilder by copying an existing ClickCount instance */
  public static org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder newBuilder(org.apache.crunchts.types.wikipedia.analysis.ClickCount other) {
    return new org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder(other);
  }
  
  /**
   * RecordBuilder for ClickCount instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ClickCount>
    implements org.apache.avro.data.RecordBuilder<ClickCount> {

    private int year;
    private int month;
    private int day;
    private java.lang.CharSequence hour;
    private java.lang.CharSequence projectname;
    private java.lang.CharSequence pagename;
    private long clicks;
    private long volume;

    /** Creates a new Builder */
    private Builder() {
      super(org.apache.crunchts.types.wikipedia.analysis.ClickCount.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing ClickCount instance */
    private Builder(org.apache.crunchts.types.wikipedia.analysis.ClickCount other) {
            super(org.apache.crunchts.types.wikipedia.analysis.ClickCount.SCHEMA$);
      if (isValidValue(fields()[0], other.year)) {
        this.year = data().deepCopy(fields()[0].schema(), other.year);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.month)) {
        this.month = data().deepCopy(fields()[1].schema(), other.month);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.day)) {
        this.day = data().deepCopy(fields()[2].schema(), other.day);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.hour)) {
        this.hour = data().deepCopy(fields()[3].schema(), other.hour);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.projectname)) {
        this.projectname = data().deepCopy(fields()[4].schema(), other.projectname);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.pagename)) {
        this.pagename = data().deepCopy(fields()[5].schema(), other.pagename);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.clicks)) {
        this.clicks = data().deepCopy(fields()[6].schema(), other.clicks);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.volume)) {
        this.volume = data().deepCopy(fields()[7].schema(), other.volume);
        fieldSetFlags()[7] = true;
      }
    }

    /** Gets the value of the 'year' field */
    public java.lang.Integer getYear() {
      return year;
    }
    
    /** Sets the value of the 'year' field */
    public org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder setYear(int value) {
      validate(fields()[0], value);
      this.year = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'year' field has been set */
    public boolean hasYear() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'year' field */
    public org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder clearYear() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'month' field */
    public java.lang.Integer getMonth() {
      return month;
    }
    
    /** Sets the value of the 'month' field */
    public org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder setMonth(int value) {
      validate(fields()[1], value);
      this.month = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'month' field has been set */
    public boolean hasMonth() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'month' field */
    public org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder clearMonth() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'day' field */
    public java.lang.Integer getDay() {
      return day;
    }
    
    /** Sets the value of the 'day' field */
    public org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder setDay(int value) {
      validate(fields()[2], value);
      this.day = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'day' field has been set */
    public boolean hasDay() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'day' field */
    public org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder clearDay() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'hour' field */
    public java.lang.CharSequence getHour() {
      return hour;
    }
    
    /** Sets the value of the 'hour' field */
    public org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder setHour(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.hour = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'hour' field has been set */
    public boolean hasHour() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'hour' field */
    public org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder clearHour() {
      hour = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'projectname' field */
    public java.lang.CharSequence getProjectname() {
      return projectname;
    }
    
    /** Sets the value of the 'projectname' field */
    public org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder setProjectname(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.projectname = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'projectname' field has been set */
    public boolean hasProjectname() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'projectname' field */
    public org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder clearProjectname() {
      projectname = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'pagename' field */
    public java.lang.CharSequence getPagename() {
      return pagename;
    }
    
    /** Sets the value of the 'pagename' field */
    public org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder setPagename(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.pagename = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'pagename' field has been set */
    public boolean hasPagename() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'pagename' field */
    public org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder clearPagename() {
      pagename = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'clicks' field */
    public java.lang.Long getClicks() {
      return clicks;
    }
    
    /** Sets the value of the 'clicks' field */
    public org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder setClicks(long value) {
      validate(fields()[6], value);
      this.clicks = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'clicks' field has been set */
    public boolean hasClicks() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'clicks' field */
    public org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder clearClicks() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'volume' field */
    public java.lang.Long getVolume() {
      return volume;
    }
    
    /** Sets the value of the 'volume' field */
    public org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder setVolume(long value) {
      validate(fields()[7], value);
      this.volume = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'volume' field has been set */
    public boolean hasVolume() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'volume' field */
    public org.apache.crunchts.types.wikipedia.analysis.ClickCount.Builder clearVolume() {
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public ClickCount build() {
      try {
        ClickCount record = new ClickCount();
        record.year = fieldSetFlags()[0] ? this.year : (java.lang.Integer) defaultValue(fields()[0]);
        record.month = fieldSetFlags()[1] ? this.month : (java.lang.Integer) defaultValue(fields()[1]);
        record.day = fieldSetFlags()[2] ? this.day : (java.lang.Integer) defaultValue(fields()[2]);
        record.hour = fieldSetFlags()[3] ? this.hour : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.projectname = fieldSetFlags()[4] ? this.projectname : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.pagename = fieldSetFlags()[5] ? this.pagename : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.clicks = fieldSetFlags()[6] ? this.clicks : (java.lang.Long) defaultValue(fields()[6]);
        record.volume = fieldSetFlags()[7] ? this.volume : (java.lang.Long) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
